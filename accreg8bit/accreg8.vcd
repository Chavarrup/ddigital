$date
	Sun Apr 27 12:05:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module accreg8bit_tb $end
$var wire 8 ! Q [7:0] $end
$var reg 8 " D [7:0] $end
$var reg 1 # clk $end
$var reg 1 $ en $end
$var reg 1 % ldacc $end
$scope module uut $end
$var wire 8 & D [7:0] $end
$var wire 1 # clk $end
$var wire 1 $ en $end
$var wire 1 % ldacc $end
$var wire 8 ' Y [7:0] $end
$var wire 8 ( X [7:0] $end
$var reg 8 ) Q [7:0] $end
$scope module mux $end
$var wire 8 * B [7:0] $end
$var wire 1 % sel $end
$var wire 8 + O [7:0] $end
$var wire 8 , A [7:0] $end
$upscope $end
$scope module sum $end
$var wire 8 - A [7:0] $end
$var wire 8 . B [7:0] $end
$var wire 1 / cout $end
$var wire 8 0 O [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
x/
b0 .
bx -
bx ,
bx +
b0 *
bx )
bx (
bx '
b0 &
0%
0$
0#
b0 "
bx !
$end
#5000
1#
#10000
b1 '
b1 +
0#
b1 "
b1 &
b1 *
b1 .
1%
1$
#15000
b10 (
b10 ,
b10 0
0/
b1 !
b1 )
b1 -
1#
#20000
0#
#25000
1#
#30000
b10 '
b10 +
0#
0%
#35000
b11 '
b11 +
b11 (
b11 ,
b11 0
b10 !
b10 )
b10 -
1#
#40000
0#
#45000
b100 '
b100 +
b100 (
b100 ,
b100 0
b11 !
b11 )
b11 -
1#
#50000
0#
#55000
b101 '
b101 +
b101 (
b101 ,
b101 0
b100 !
b100 )
b100 -
1#
#60000
0#
#65000
b110 '
b110 +
b110 (
b110 ,
b110 0
b101 !
b101 )
b101 -
1#
#70000
0#
#75000
b111 '
b111 +
b111 (
b111 ,
b111 0
b110 !
b110 )
b110 -
1#
#80000
0#
#85000
b1000 '
b1000 +
b1000 (
b1000 ,
b1000 0
b111 !
b111 )
b111 -
1#
#90000
0#
#95000
b1001 '
b1001 +
b1001 (
b1001 ,
b1001 0
b1000 !
b1000 )
b1000 -
1#
#100000
0#
#105000
b1010 '
b1010 +
b1010 (
b1010 ,
b1010 0
b1001 !
b1001 )
b1001 -
1#
#110000
0#
#115000
b1011 '
b1011 +
b1011 (
b1011 ,
b1011 0
b1010 !
b1010 )
b1010 -
1#
#120000
0#
#125000
b1100 '
b1100 +
b1100 (
b1100 ,
b1100 0
b1011 !
b1011 )
b1011 -
1#
#130000
0#
#135000
b1101 '
b1101 +
b1101 (
b1101 ,
b1101 0
b1100 !
b1100 )
b1100 -
1#
#140000
0#
#145000
b1110 '
b1110 +
b1110 (
b1110 ,
b1110 0
b1101 !
b1101 )
b1101 -
1#
#150000
0#
#155000
b1111 '
b1111 +
b1111 (
b1111 ,
b1111 0
b1110 !
b1110 )
b1110 -
1#
#160000
0#
#165000
b10000 '
b10000 +
b10000 (
b10000 ,
b10000 0
b1111 !
b1111 )
b1111 -
1#
#170000
0#
#175000
b10001 '
b10001 +
b10001 (
b10001 ,
b10001 0
b10000 !
b10000 )
b10000 -
1#
#180000
0#
#185000
b10010 '
b10010 +
b10010 (
b10010 ,
b10010 0
b10001 !
b10001 )
b10001 -
1#
#190000
0#
#195000
b10011 '
b10011 +
b10011 (
b10011 ,
b10011 0
b10010 !
b10010 )
b10010 -
1#
#200000
0#
